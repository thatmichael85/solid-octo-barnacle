/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    //AWS Lambda
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.3'
    implementation 'com.amazonaws:aws-lambda-java-events:3.11.3'

    //AWS SDK (if required for other AWS services)
    implementation 'software.amazon.awssdk:secretsmanager:2.22.5'

    //SnakeYAML for YAML parsing
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.16.1'
    //MongoDB driver
    implementation 'org.mongodb:mongodb-driver-reactivestreams:4.11.0'

    //Project Reactor
    implementation 'io.projectreactor:reactor-core:3.5.3'

    //Logging
    implementation 'org.slf4j:slf4j-api:1.7.32'
    implementation 'com.amazonaws:aws-lambda-java-log4j2:1.6.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.1'
    implementation 'org.apache.logging.log4j:log4j-layout-template-json:2.17.1'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    //Testing only
    testImplementation 'org.mockito:mockito-core:4.0.0'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'io.projectreactor:reactor-test:3.5.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

application {
    // Define the main class for the application.
    mainClass = 'dist.migration.handlers.MongoMigrationHandler'
}
test {
    useJUnitPlatform()
}
tasks.register('buildZip', Zip) {
    into('lib') {
        from(jar)
        from(configurations.runtimeClasspath)
    }
}
